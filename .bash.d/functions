#!/bin/bash

bigpkgs() {
    expac -Q '%n\t%m' | \
        awk '{
            s[$1]=$2
        }
        END {
            PROCINFO["sorted_in"]="@val_num_asc"
            for(i in s) {
                printf("%7d %s\n", s[i]/2^10, i)
            }
        }'
}

awk-calc() {
    awk "BEGIN{print $*}"
}

flush-caches() {
    sync && sudo sysctl -w vm.drop_caches=3
}

fix-permissions() {
    if [[ -d $1 ]]; then
        find "$1" -type d -exec chmod 755 {} \+
        find "$1" -type f -exec chmod 644 {} \+
    else
        echo "$1 is not a directory"
    fi
}

folder2mp3() {
    [[ "$#" != "1" || ! -d "$1" ]] && return 1
    find "$1" -type f -name "*.flac" -print0 | \
        parallel -0 flac2mp3
}

last_installed() {
    expac -Q '%l %n' -t '%s' | awk '
        {
            pkg[$2]=$1
        }
        END {
            PROCINFO["sorted_in"]="@val_num_asc"
            for(i in pkg) {
                print i
            }
        }'
}

lowercase() {
    for x in *; do
        mv "$x" "${x,,}"
    done
}

myip() {
    curl icanhazip.com
}

most_used() {
    awk '{a[$1]++}
        END {
            tail="tail -n 30"
            PROCINFO["sorted_in"]="@val_num_asc"
            for(i in a) {
                printf("%4d %s\n", a[i], i) | tail
            }
        }' "$HISTFILE"
}

net-summon() {
    while :; do
        ping -c 1 google.com 2> /dev/null && \
            eject && eject -t && break
    done
}

nocomments() {
    awk '!/^[ \t]*(#|$)/' "$@"
    #perl -ne '/^\s*(#|$)/ or print;' "$@"
}

qemu-livecd() {
    [[ -f "$1" ]] || return 1
    qemu-system-x86_64 -m 512 -vga std -boot d -cdrom "$1"
}

random_password() {
    if [[ "$1" =~ ^[[:digit:]]+$ ]]; then
        pwsize="$1"
    else
        pwsize="16"
    fi
    echo "$(tr -dc [:alnum:] < /dev/urandom | head -c "$pwsize")"
}

rot13_dec() {
    local cmd="tr 'A-Za-z' 'N-ZA-Mn-za-m'"
    (($#)) && { echo "$@" | $cmd; return 0; } || xsel -o | $cmd
}

share() {
    python2 -m SimpleHTTPServer
}

sprunge() {
    curl --form 'sprunge=<-' http://sprunge.us
}

vacuum-firefox() {
    find ~/.mozilla -type f -name \*.sqlite -exec sqlite3 {} vacuum \; \
        -exec sqlite3 {} reindex \;
}

yadl() {
    local cmd="yle-dl --vfat --sublang all"
    (($#)) && { $cmd "$1"; return 0; } || $cmd "$(xsel -o)"
}

ytdl() {
    local cmd="youtube-dl --continue"
    (($#)) && { $cmd "$1"; return 0; } || $cmd "$(xsel -o)"
}

ytmp3() {
    local cmd="youtube-dl --continue --extract-audio \
        --audio-format mp3 --audio-quality 0"
    (($#)) && { $cmd "$1"; return 0; } || $cmd "$(xsel -o)"
}

ytst() {
    local cmd="mplayer -really-quiet -cache 1024"
    (($#)) && { $cmd "$1"; return 0; } || $cmd "$(xsel -o)"
}
